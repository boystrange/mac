;; Guiding principle: these should be the symbols that most likely I
;; want to insert verbatim in a document or program. For more
;; general formula typesetting, using TeX macros is just fine.

;; The character combinations should not interfere with TeX editing,
;; in particular with the backslash, subscript and superscript.

(quail-define-package
 "luca-input-method" "UTF-8" "L<" t
  "Luca's postfix input method"
  nil t nil nil nil nil nil nil nil nil t)

(quail-define-rules
 ;; Accented letters
 ("aa"        "à")
 ("ee"        "è")
 ("ee/"       "é")
 ("ii"        "ì")
 ("oo"        "ò")
 ("oo/"       "ó")
 ("uu"        "ù")
 ("AA"        "À")
 ("EE"        "È")
 ("EE/"       "É")
 ("II"        "Ì")
 ("OO"        "Ò")
 ("OO/"       "Ó")
 ("UU"        "Ù")
 ;; Subscripts
 ("0_"        "₀")
 ("1_"        "₁")
 ("2_"        "₂")
 ("3_"        "₃")
 ("4_"        "₄")
 ("5_"        "₅")
 ("6_"        "₆")
 ("7_"        "₇")
 ("8_"        "₈")
 ("9_"        "₉")
 ("i__"       "ᵢ")
 ("j__"       "ⱼ")
 ("k__"       "ₖ")
 ("m__"       "ₘ")
 ("n__"       "ₙ")
 ;; Superscripts
 ("0^"        "⁰")
 ("1^"        "¹")
 ("2^"        "²")
 ("3^"        "³")
 ("4^"        "⁴")
 ("5^"        "⁵")
 ("6^"        "⁶")
 ("7^"        "⁷")
 ("8^"        "⁸")
 ("9^"        "⁹")
 ("i^^"       "ⁱ")
 ("j^^"       "ʲ")
 ("k^^"       "ᵏ")
 ("m^^"       "ᵐ")
 ("n^^"       "ⁿ")
 ;; Greek letters
 ("alpha/"    "α")
 ("beta/"     "β")
 ("Gamma/"    "Γ")
 ("gamma/"    "γ")
 ("Delta/"    "Δ")
 ("delta/"    "δ")
 ("epsilon/"  "ε")
 ("digamma/"  "ϝ")
 ("zeta/"     "ζ")
 ("eta/"      "η")
 ("Theta/"    "θ")
 ("theta/"    "Θ")
 ("iota/"     "ι")
 ("kappa/"    "κ")
 ("Lambda/"   "Λ")
 ("lambda/"   "λ")
 ("mu/"       "μ")
 ("nu/"       "ν")
 ("Xi/"       "Ξ")
 ("xi/"       "ξ")
 ("Pi/"       "Π")
 ("pi/"       "π")
 ("rho/"      "ρ")
 ("Sigma/"    "Σ")
 ("sigma/"    "σ")
 ("varsigma/" "ς")
 ("tau/"      "τ")
 ("upsilon/"  "υ")
 ("Phi/"      "Φ")
 ("phi/"      "φ")
 ("chi/"      "χ")
 ("Psi/"      "Ψ")
 ("psi/"      "ψ")
 ("Omega/"    "Ω")
 ("omega/"    "ω")
 ;; Operators
 ;; Arrows
 ("->/"       "→")
 ("<-/"       "←")
 ("=>/"       "⇒")
 ("<=/"       "⇐")
 )

(provide 'luca-input-method)
